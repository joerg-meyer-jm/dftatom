# Modify these for your Fortran compiler:

# GFortran
F90 = gfortran
#F90FLAGS = -Wall -std=f95 -Wextra -Wimplicit-interface -fPIC
# with
#    GNU Fortran (Homebrew GCC 7.2.0) 7.2.0
# this
#    gfortran -Wall -std=f95 -Wextra -Wimplicit-interface -fPIC -g -fbounds-check -c c_dftatom.f90
# triggers complaints:
#    c_dftatom.f90:7:4:
#
#    use iso_c_binding, only: c_int, c_double, c_bool
#       1
#.  Error: Fortran 2003: ISO_C_BINDING module at (1)
F90FLAGS = -Wall -Wextra -Wimplicit-interface -fPIC
#
# suppress warning when linking with libraries from Anaconda distribution
# (which is apparently built to also run on older macOS versions)
#	https://stackoverflow.com/questions/25352389/what-is-the-difference-between-macosx-deployment-target-and-mmacosx-version-min
#F90FLAGS += --mmacosx-version-min=10.9
# This flag is not supported by gfortran 4.8.5 provided by anaconda3 toolchain package gfortran_osx-64.
# Therefore, use environment variable instead.
export MACOSX_DEPLOYMENT_TARGET=10.9
#
# Debug flags:
F90FLAGS += -g -fbounds-check
# Release flags:
#F90FLAGS += -O3 -march=native -ffast-math -funroll-loops

# Intel ifort
#F90 = ifort-12.0.191
#F90FLAGS = -stand f95 -warn all
# Debug flags:
#F90FLAGS += -check all
# Release flags:
#F90FLAGS += -xHOST -O3 -no-prec-div -static

# ----------------------------------------------------------------------------

export F90
export F90FLAGS

all:
	$(MAKE) -C src -f Makefile.manual
	$(MAKE) -C tests -f Makefile.manual

test:
	$(MAKE) -C tests -f Makefile.manual test
	@echo
	@echo "All tests passed."

clean:
	$(MAKE) -C src -f Makefile.manual clean
	$(MAKE) -C tests -f Makefile.manual clean
